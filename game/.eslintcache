[{"C:\\Users\\bluem\\game\\trivia\\game\\src\\index.js":"1","C:\\Users\\bluem\\game\\trivia\\game\\src\\components\\Round3.js":"2","C:\\Users\\bluem\\game\\trivia\\game\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":1606208675798,"results":"4","hashOfConfig":"5"},{"size":7257,"mtime":1606212682915,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606208675798,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jbmm88",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bluem\\game\\trivia\\game\\src\\index.js",[],"C:\\Users\\bluem\\game\\trivia\\game\\src\\components\\Round3.js",["15","16"],"import React, {useState, useEffect} from 'react';\r\n// import {Link} from 'react-router-dom';\r\nimport Axios from 'axios'\r\nimport M from 'materialize-css';\r\nimport correct from '../audio/success-sound-effect.mp3'\r\nimport wrongSound from '../audio/losing-bell-game-show-sound.mp3'\r\nimport '../index.css'\r\n\r\n\r\n \r\n\r\nconst Round3 = (props)=> {\r\n    let [score, setScore] = useState(0);\r\n    let [isEnd, setisEnd] = useState(false) \r\n    let [currQuestion , setCurrQuestion]= useState(0)\r\n    let [diff, setDiff]= useState( \"easy\")\r\n      \r\n     let degrees = ['easy', 'medium', 'hard']\r\nlet url2= `https://opentdb.com/api.php?amount=10&category=23&difficulty=${diff}&type=multiple`\r\nlet url1 =`https://opentdb.com/api.php?amount=10&category=27&difficulty=${diff}&type=multiple`\r\nlet url3 = `https://opentdb.com/api.php?amount=10&category=20&difficulty=${diff}&type=multiple`\r\nlet GeoUrl = `https://opentdb.com/api.php?amount=10&category=22&difficulty=${diff}&type=multiple`\r\nlet SNurl = `https://opentdb.com/api.php?amount=10&category=17&difficulty=${diff}&type=multiple`\r\nlet filmUrl = `https://opentdb.com/api.php?amount=10&category=11&difficulty=${diff}&type=multiple`\r\nlet musicUrl = `https://opentdb.com/api.php?amount=10&category=12&difficulty=${diff}&type=multiple`\r\nlet genUrl = `https://opentdb.com/api.php?amount=10&category=9&difficulty=${diff}&type=multiple`\r\nlet mathUrl = `https://opentdb.com/api.php?amount=10&category=19&difficulty=${diff}&type=multiple`\r\nlet comUrl = `https://opentdb.com/api.php?amount=10&category=18&difficulty=${diff}&type=multiple`\r\n//SET THE URL\r\nlet [url, setUrl]= useState(null)\r\nconsole.log(\"URL\", url)   \r\n\r\n \r\nconst next = ()=> {\r\n    if(currQuestion !== q.length-1){\r\n     setCurrQuestion(currQuestion +1)\r\n    }\r\n     else{\r\n     setisEnd(true)\r\n   }\r\n }\r\n const gameOver =()=> {\r\n     setisEnd(true)\r\n }\r\n   \r\n const back =(e)=> {\r\n     setUrl(null)\r\n     setisEnd(false)\r\n     setCurrQuestion(0)\r\n }\r\n\r\n   const nextRound = ()=>{\r\n       setisEnd(false)\r\n       setCurrQuestion(0)\r\n       if (diff === 'easy'){\r\n           setDiff('medium')\r\n       }\r\n       else if (diff === 'medium'){\r\n           setDiff('hard')\r\n       }\r\n       else{\r\n           console.log('You have completed this round!')\r\n       }\r\n   }\r\n\r\n\r\n\r\n    \r\n    \r\n    const submitD = (e)=> {\r\n        e.preventDefault()\r\n        setDiff(  e.target.value)\r\n        console.log(\"DIFF from function\", diff)\r\n    }\r\n    const [q,setQ]= useState( [])\r\n\r\n    const check = (option)=> {\r\n     \r\n   \r\n        if (option === q[currQuestion].correct_answer){\r\n          console.log (\"CORRECTAMUNDO !!\")\r\n           setScore( score +=1)\r\n           M.toast({\r\n            html: \"Correct!\",\r\n            classes :'correct',\r\n            duration: 1500\r\n          })\r\n          document.getElementById('correct').play()\r\n           next()\r\n            \r\n        }\r\n        else{\r\n          console.log(\"WRONG!\")\r\n          M.toast({\r\n            html: \"Wrong!\",\r\n            classes: 'wrong'\r\n          })\r\n          document.getElementById('wrongSound').play()\r\n      \r\n       \r\n      }\r\n      }\r\n\r\n \r\n\r\n     useEffect(()=> {\r\n         setCurrQuestion(0)\r\n        Axios.get(url)\r\n        .then(res=> setQ(res.data.results))\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n\r\n    }, [diff, url])\r\n    console.log(q)\r\n\r\n \r\n    // if(url === null) return <div>Choose a Category</div>\r\n    if(!q[currQuestion]) return <div className = 'categories'>\r\n        <h1 className = 'header'>Welcome to the Trivia App!</h1>\r\n        \r\n        \r\n        <p className = 'category' onClick ={()=> setUrl(genUrl) }>General Knowledge</p>\r\n\r\n        <p className = 'category' onClick ={()=> setUrl(url2) }>History</p>\r\n        <p className = 'category' onClick = {()=> setUrl(mathUrl)}>Mathematics</p>\r\n        <p className = 'category' onClick = {()=> setUrl(comUrl)}>Computers</p>\r\n\r\n\r\n        <p className = 'category' onClick = {()=> setUrl(url1)}>Animals</p>\r\n        <p className = 'category' onClick = {()=> setUrl(url3)}>Mythology</p>\r\n        <p className = 'category' onClick = {()=> setUrl(GeoUrl)}>Geography</p>\r\n        <p className = 'category' onClick = {()=> setUrl(SNurl)}>Science and Nature</p>\r\n        <p className = 'category' onClick = {()=> setUrl(filmUrl)}>Film</p>\r\n        <p className = 'category' onClick = {()=> setUrl(musicUrl)}>Music</p>\r\n\r\n\r\n        \r\n \r\n        \r\n        \r\n        </div>\r\n    let stuff = Array.from(q[currQuestion].incorrect_answers)\r\n    stuff.push(q[currQuestion].correct_answer)\r\n    const shuffle = (arr)=> {\r\n        let curId = arr.length;\r\n        while(0 !== curId){\r\n            let randId = Math.floor(Math.random()* curId);\r\n            curId -=1\r\n            let tmp = arr[curId];\r\n            arr[curId]= arr[randId]\r\n            arr[randId]= tmp\r\n        }\r\n        return arr;\r\n  \r\n    }\r\n   \r\n    let answers = shuffle(stuff)\r\n\r\n    if(isEnd){\r\n        return(\r\n            <div className = 'game-over-div'>\r\n                <h1 className = 'game-over'>Game Over</h1>\r\n                <h3 className = 'score'> You Scored {score} points!</h3>\r\n                <button className = 'option'onClick = {()=> back()}>Try Again</button>\r\n                <button className = \"option\"onClick= {()=>setCurrQuestion(null)}>Back to Categories</button>\r\n\r\n               {diff !=='hard' &&  (\r\n                   \r\n                      \r\n                   <button className = 'next' onClick = {nextRound}>Next Round ?</button>\r\n                     \r\n                  )}\r\n             </div>\r\n        )\r\n    }\r\n    \r\n    \r\n    \r\n   else return(\r\n\r\n<div>\r\n<div>\r\n           <button className = \"category\"onClick= {()=>setCurrQuestion(null)}>Back to Categories</button>\r\n\r\n        <form type=\"submit\" onSubmit={submitD}\r\n         className ='dropdown'\r\n        \r\n        >\r\n          <label htmlFor=\"set difficulty\">\r\n            Set Difficulty\r\n            <select\r\n              id=\"type\"\r\n              value={diff}\r\n              onChange={e => setDiff(e.target.value)}\r\n              onBlur={submitD}\r\n            >\r\n               {degrees.map(degree => (\r\n                <option key={degree} value={degree}>\r\n                  {degree}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n         </form>\r\n  \r\n         \r\n   \r\n       \r\n\r\n\r\n\r\n  </div>\r\n\r\n  <div className = 'game-div'> \r\n  <h3 className= \"score\">Score:{score}</h3>\r\n   <audio id = 'audio' src = {wrongSound}id = \"wrongSound\"></audio>\r\n      <audio id = 'audio'   src = {correct}id = \"correct\"></audio>\r\n\r\n\r\n      <div className = 'q-div'> \r\n     <h2 className = 'question'>{q[currQuestion].question}</h2>\r\n     </div>\r\n      {answers.map(e=> {\r\n          return(\r\n              <div className = 'options'>\r\n                  <p className = 'option' onClick = {()=>check(e)}>{e}</p>\r\n\r\n                  </div>\r\n          )\r\n\r\n      })}\r\n      \r\n      <div className = 'button-div'>\r\n          \r\n          <button onClick ={next}>Next</button>\r\n          </div>\r\n           \r\n  \r\n          {currQuestion === q.length -1 && (\r\n            <button className = 'finish-him' onClick={gameOver}>Finish</button>\r\n          )}\r\n        </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n \r\n\r\n\r\n\r\n)\r\n\r\n}\r\nexport default Round3","C:\\Users\\bluem\\game\\trivia\\game\\src\\reportWebVitals.js",[],{"ruleId":"17","severity":1,"message":"18","line":218,"column":42,"nodeType":"19","endLine":218,"endColumn":59},{"ruleId":"17","severity":1,"message":"18","line":219,"column":44,"nodeType":"19","endLine":219,"endColumn":58},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]